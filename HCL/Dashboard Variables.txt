Here are the cases where operators of any permission level can read/modify all dashboard variables:

* All Console Operators can access Dashboard Variables:
* Users without custom content creation rights can set dashboard variables for wizards/dashboards they dont have access to if they can get the console to think they have the dashboard/wizard
* Load Wizard was the original method but is not actually required
  * You can just place a .ojo file with the right name in your console cache (AppData\Local\BigFix\Enterprise Console\bigfix.ad.weaston.org\nonmo\Sites\BES Support)
  * Refresh the console (F5)
  * You now have access to wizard variables for that dashboard -- verify using presentation debugger: (name of it, value of it, name of wizard of it, name of site of wizard of it) of shared variables of bes wizards
* Operators with REST API access can get/set all dashboard variables through presentation debugger without site access or load wizard access
```
 You can use the REST methods via the javascript functions API.get, API.put, API.post
<script>API.Get("dashboardvariables",  function(error, status, body){alert(body)})</script>
```

All REST API operators can read/write all Dashboard Variables:
* You can verify this by creating a non-mo account with no permissions other than rest API access and hitting:  https://your.bigfix.server.com:52311/api/dashboardvariables with a web browser like google chrome
* You can use the attached script or a REST client and change any variable as well

If the argument is to be made that Dashboard Variables do not store sensitive information then here are the places where I believe they are storing sensitive information:
* All Custom Repository Dashboards/Wizards which inject the contents of dashboard variables directly into fixlets. This can be used to run malicious code on the endpoint as part of the operator performing normal maintenance tasks:image.png

* SCM Dashboard uses dashboard variables for Compliance Exception Reporting.
* OS Deployment - Image Library: domain passwords, admin passwords are base 16 encoded, bitlocker pin is plain text. Dashboard variables store the settings used for the MDT share that is to be used for re-imaging. Allowing an attacker to swap images, create accounts, etc.
* BigFix.me Sync Tool stores username/password in plain text

As requested here's a screenshot and attached sample script for dumping dashboard variables as any user with zero site access (BES Support and Server Automation are required, you cannot make an operator that doesn't have access to those sites) and zero permissions other than REST API access:
image.png

The script requires Powershell Core (6+) and can be invoked using: .\BESDashboardVariable.ps1 -Server "bigfix.server.com" -Username "operator-name" -password "yourpassword"

It will create a dashboard variable under epoch.ojo with a name/value of the current epoch time and then it should print all of the variables under epoch.ojo. This script should work under any permission level.